
# Adding the custom gcovr target.
set(GCOVR_NAME gcovr)
find_program(GCOVR_COMMAND ${GCOVR_NAME})
if(EXISTS ${GCOVR_COMMAND})
 execute_process(COMMAND bash "-c" "${GCOVR_COMMAND} --version | head -n 1" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE GCOVR_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
 message(STATUS "Command ${GCOVR_NAME} found: ${GCOVR_COMMAND} (${GCOVR_VERSION})")
 set(GCOVR_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/gcovr)
 set(GCOVR_EXCLUDES -e ${CMAKE_CURRENT_SOURCE_DIR}/src/executable -e ${CMAKE_CURRENT_SOURCE_DIR}/test -e ${CMAKE_CURRENT_BINARY_DIR})
 file(REMOVE_RECURSE ${GCOVR_OUTPUT_DIR})
 file(MAKE_DIRECTORY ${GCOVR_OUTPUT_DIR})
 set(GCOVR_MIN_LINE_COVERAGE 100)
 set(GCOVR_MIN_BRANCH_COVERAGE 100)
 set(GCOVR_THRESHOLD --fail-under-line ${GCOVR_MIN_LINE_COVERAGE} --fail-under-branch ${GCOVR_MIN_BRANCH_COVERAGE})
 add_custom_target(gcovr COMMAND ${GCOVR_COMMAND} ${GCOVR_EXCLUDES} ${GCOVR_THRESHOLD} --html-details ${GCOVR_OUTPUT_DIR}/coverage.html --xml ${GCOVR_OUTPUT_DIR}/coverage.xml -r ${CMAKE_CURRENT_SOURCE_DIR})
else()
 message(FATAL_ERROR "Command ${GCOVR_NAME} not found.")
endif()
