
# Adding the custom doxygen target.
set(DOXYGEN_NAME doxygen)
find_program(DOXYGEN_COMMAND ${DOXYGEN_NAME})
if(EXISTS ${DOXYGEN_COMMAND})
 execute_process(COMMAND ${DOXYGEN_COMMAND} --version WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE DOXYGEN_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
 message(STATUS "Command ${DOXYGEN_NAME} found: ${DOXYGEN_COMMAND} (${DOXYGEN_VERSION})")
 set(DOXYFILE ${CMAKE_CURRENT_SOURCE_DIR}/doxyfile)
 if(EXISTS ${DOXYFILE})
  message(STATUS "Using DOXYFILE: ${DOXYFILE}")
 else()
  message(FATAL_ERROR "Doxyfile ${DOXYFILE} does not exists.")
 endif()
 if(NOT DOXYGEN_OUTPUT_DIR)
  set(DOXYGEN_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/docs)
  message(STATUS "Variable DOXYGEN_OUTPUT_DIR not set, using default: ${DOXYGEN_OUTPUT_DIR}")
 else()
  message(STATUS "Using DOXYGEN_OUTPUT_DIR: ${DOXYGEN_OUTPUT_DIR}")
 endif()
 set(DOXYGEN_INPUT ${CMAKE_CURRENT_SOURCE_DIR}/src)
 set(DOXYGEN_EXCLUDE_PATTERNS "*/build/*")
 file(REMOVE_RECURSE ${DOXYGEN_OUTPUT_DIR})
 file(MAKE_DIRECTORY ${DOXYGEN_OUTPUT_DIR})
 add_custom_target(doxygen
  COMMAND env DOXYGEN_PROJECT_NAME=${PROJECT_NAME} DOXYGEN_OUTPUT_DIR=${DOXYGEN_OUTPUT_DIR} DOXYGEN_INPUT=${DOXYGEN_INPUT} DOXYGEN_EXCLUDE_PATTERNS=${DOXYGEN_EXCLUDE_PATTERNS} ${DOXYGEN_COMMAND} ${DOXYFILE} >${DOXYGEN_OUTPUT_DIR}/doxygen_output.log WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  )
else()
 message(FATAL_ERROR "Command ${DOXYGEN_NAME} not found.")
endif()
