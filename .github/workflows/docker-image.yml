name: Docker Image CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ImageName: cmaketemplate
    steps:

    - uses: actions/checkout@v4

    - name: Build the base docker image
      run: docker build -t $ImageName:base $(pwd)/docker/base

    - name: Build the builder docker image
      run: docker build -t $ImageName:builder $(pwd)/docker/builder

    - name: Build the project (Debug)
      run: docker run --rm --entrypoint sh -v $(pwd):/work -w /work $ImageName:builder -c "mkdir -p /work/build/Debug && cd /work/build/Debug && cmake -DCMAKE_BUILD_TYPE=Debug ../.. && make && make test && make gcovr && make cppcheck && make valgrind && make package && make doxygen"

    - name: Build the project (Release)
      run: docker run --rm --entrypoint sh -v $(pwd):/work -w /work $ImageName:builder -c "mkdir -p /work/build/Release && cd /work/build/Release && cmake -DCMAKE_BUILD_TYPE=Release ../.. && make && make test && make gcovr && make cppcheck && make valgrind && make package && make doxygen"

    - name: Copy .deb to runtime docker context
      run: cp $(pwd)/build/Release/*.deb $(pwd)/docker/runtime

    - name: Build the runtime docker image
      run: docker build -t $ImageName:runtime $(pwd)/docker/runtime

    - name: Run the project
      run: docker run --rm $ImageName:runtime
